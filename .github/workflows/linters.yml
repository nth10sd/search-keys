name: linters

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install modules
      run: npm install
    - name: Run ESLint
      run: ./node_modules/.bin/eslint . --ext .js,.jsx,.ts,.tsx

    # CodeQL analysis section START
    # Linux-only, enable on GitHub for public repos and private repos on Enterprise plan
    # IMPORTANT setup steps:
    #   1) If this is a private repo NOT on a GitHub Enterprise plan, disable the last CodeQL result upload step
    #   2) Check ${{ secrets.CODEQL_UPLOAD_TOKEN }} has been added and updated in this repo
    #   3) Check CodeQL languages for this repo are updated correctly
    - name: CodeQL languages, space-separated, for list see https://codeql.github.com/docs/codeql-cli/creating-codeql-databases/
      if: startsWith(runner.os, 'Linux')
      run: echo 'CODEQL_LANGUAGES="javascript"' >> $GITHUB_ENV
    - name: Download and extract - https://docs.github.com/en/code-security/code-scanning/using-codeql-code-scanning-with-your-existing-ci-system
      if: startsWith(runner.os, 'Linux')
      run: |
        mkdir -p ../codeql_dl ;
        aria2c --dir=../codeql_dl --referer=* --remote-time https://github.com/github/codeql-action/releases/latest/download/codeql-bundle-linux64.tar.gz ;
        tar xzf ../codeql_dl/codeql-bundle-linux64.tar.gz --directory=../codeql_dl/ ;
    - name: Check that the qlpacks exist for specified languages
      if: startsWith(runner.os, 'Linux')
      run: |
        for LANG in $CODEQL_LANGUAGES ; do
          if ! ../codeql_dl/codeql/codeql resolve qlpacks | grep -q "$LANG-"; then exit 1 ; fi ;
        done ;
    - name: Check that the codeql queries exist for specified languages
      if: startsWith(runner.os, 'Linux')
      run: |
        for LANG in $CODEQL_LANGUAGES ; do
          if ! ls ../codeql_dl/codeql/qlpacks/codeql/"$LANG"-queries/*.*/codeql-suites/ | grep -q "$LANG-"; then exit 1 ; fi ;
        done ;
    - name: Create codeql database for specified languages
      if: startsWith(runner.os, 'Linux')
      run: ../codeql_dl/codeql/codeql database create codeql-result-database/ --db-cluster --language=$(echo "$CODEQL_LANGUAGES" | tr " " ",") ;
    - name: Run codeql analysis on each specified languages
      if: startsWith(runner.os, 'Linux')
      run: |
        for LANG in $CODEQL_LANGUAGES ; do
          ../codeql_dl/codeql/codeql database analyze codeql-result-database/"$LANG"/ --sarif-category="$LANG" --output=out-"$LANG".sarif --format=sarif-latest --threads=0 ;
        done ;
    - name: Search for startLine to see if any issues are found
      if: startsWith(runner.os, 'Linux')
      run: grep --context=11 startLine out-*.sarif ;
    - name: Upload codeql results to public GitHub repo or private repo on an enterprise plan
      if: startsWith(runner.os, 'Linux')
      run: |
        echo "$CODEQL_TOKEN" |
        for SARIF in $(ls out-*.sarif) ; do
          ../codeql_dl/codeql/codeql github upload-results --commit=$(git rev-parse --verify HEAD) --ref=refs/heads/$(git rev-parse --abbrev-ref HEAD) --repository="$GITHUB_REPOSITORY" --sarif="$SARIF" --github-auth-stdin ;
        done ;
      env:
        CODEQL_TOKEN: ${{ secrets.CODEQL_UPLOAD_TOKEN }}
    # CodeQL analysis section END
